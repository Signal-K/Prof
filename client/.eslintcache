[{"/Users/liamarbuckle/Documents/Mint/theclub/client/src/index.js":"1","/Users/liamarbuckle/Documents/Mint/theclub/client/src/App.js":"2","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/profile.js":"3","/Users/liamarbuckle/Documents/Mint/theclub/client/src/lib/LifetimeAccessRequestStatusContext.js":"4","/Users/liamarbuckle/Documents/Mint/theclub/client/src/lib/LifetimeContext.js":"5","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/home.js":"6","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/signup.js":"7","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/payment.js":"8","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/layout.js":"9","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/premium-content.js":"10","/Users/liamarbuckle/Documents/Mint/theclub/client/src/lib/magic.js":"11","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/payment-form.js":"12","/Users/liamarbuckle/Documents/Mint/theclub/client/src/lib/UserContext.js":"13","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/login.js":"14","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/header.js":"15","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/loading.js":"16","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/login-form.js":"17","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/signup-form.js":"18","/Users/liamarbuckle/Documents/Mint/theclub/client/src/app.js":"19"},{"size":336,"mtime":1653559033804,"results":"20","hashOfConfig":"21"},{"size":3300,"mtime":1653558832973,"results":"22","hashOfConfig":"21"},{"size":1769,"mtime":1653586487266,"results":"23","hashOfConfig":"21"},{"size":106,"mtime":1653558832973,"results":"24","hashOfConfig":"21"},{"size":87,"mtime":1653558832974,"results":"25","hashOfConfig":"21"},{"size":458,"mtime":1653558832973,"results":"26","hashOfConfig":"21"},{"size":2178,"mtime":1653558832973,"results":"27","hashOfConfig":"21"},{"size":1206,"mtime":1653558832973,"results":"28","hashOfConfig":"21"},{"size":409,"mtime":1653558832973,"results":"29","hashOfConfig":"21"},{"size":3304,"mtime":1653558832973,"results":"30","hashOfConfig":"21"},{"size":113,"mtime":1653558832974,"results":"31","hashOfConfig":"21"},{"size":7461,"mtime":1653558832973,"results":"32","hashOfConfig":"21"},{"size":88,"mtime":1653558832974,"results":"33","hashOfConfig":"21"},{"size":2034,"mtime":1653558832973,"results":"34","hashOfConfig":"21"},{"size":2868,"mtime":1653558832973,"results":"35","hashOfConfig":"21"},{"size":161,"mtime":1653558832973,"results":"36","hashOfConfig":"21"},{"size":1297,"mtime":1653558832973,"results":"37","hashOfConfig":"21"},{"size":1301,"mtime":1653558832973,"results":"38","hashOfConfig":"21"},{"size":3299,"mtime":1653558743191,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"bpadyo",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/liamarbuckle/Documents/Mint/theclub/client/src/index.js",[],["81","82"],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/App.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/profile.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/lib/LifetimeAccessRequestStatusContext.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/lib/LifetimeContext.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/home.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/signup.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/payment.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/layout.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/premium-content.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/lib/magic.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/payment-form.js",["83"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useHistory } from \"react-router-dom\";\nimport { LifetimeContext } from \"../lib/LifetimeContext\";\n\nexport default function PaymentForm({ email }) {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n\n  const [customerID, setCustomerID] = useState(\"\");\n  const [, setLifetimeAccess] = useContext(LifetimeContext);\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    fetch(`${process.env.REACT_APP_SERVER_URL}/create-payment-intent`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setClientSecret(data.clientSecret);\n        setCustomerID(data.customer);\n        setLifetimeAccess(true);\n      });\n  }, [email]);\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n      },\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n      // Update Stripe customer info to include metadata\n      // which will help us determine whether or not they\n      // are a Lifetime Access member.\n      fetch(`${process.env.REACT_APP_SERVER_URL}/update-customer`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ customerID }),\n      })\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          console.log(\"Updated Stripe customer object: \", data);\n          history.push(\"/premium-content\");\n        });\n    }\n  };\n\n  return (\n    <>\n      <form id=\"payment-form\" onSubmit={handleSubmit}>\n        <CardElement\n          id=\"card-element\"\n          options={cardStyle}\n          onChange={handleChange}\n        />\n        <button disabled={processing || disabled || succeeded} id=\"submit\">\n          <span id=\"button-text\">{processing ? \"Pay\" : \"Pay\"}</span>\n        </button>\n        {/* Show any error that happens when processing the payment */}\n        {error && (\n          <div className=\"card-error\" role=\"alert\">\n            {error}confirmCardPayment\n          </div>\n        )}\n      </form>\n      <style>{`\n      #root {\n        align-items: center;\n      }\n      p {\n        margin-top:\n      }\n      body {\n        font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n        font-size: 16px;\n        -webkit-font-smoothing: antialiased;\n        display: flex;\n        justify-content: center;\n        align-content: center;\n        height: 100vh;\n        width: 100vw;\n      }\n      form {\n        width: 30vw;\n        align-self: center;\n        box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n          0px 2px 5px 0px rgba(50, 50, 93, 0.1), 0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n        border-radius: 7px;\n        padding: 40px;\n      }\n      input {\n        border-radius: 6px;\n        margin-bottom: 6px;\n        padding: 12px;\n        border: 1px solid rgba(50, 50, 93, 0.1);\n        max-height: 44px;\n        font-size: 16px;\n        width: 100%;\n        background: white;\n        box-sizing: border-box;\n      }\n      .result-message {\n        line-height: 22px;\n        font-size: 16px;\n      }\n      .result-message a {\n        color: rgb(89, 111, 214);\n        font-weight: 600;\n        text-decoration: none;\n      }\n      .hidden {\n        display: none;\n      }\n      #card-error {\n        color: rgb(105, 115, 134);\n        font-size: 16px;\n        line-height: 20px;\n        margin-top: 12px;\n        text-align: center;\n      }\n      #card-element {\n        border-radius: 4px 4px 0 0;\n        padding: 12px;\n        border: 1px solid rgba(50, 50, 93, 0.1);\n        max-height: 44px;\n        width: 100%;\n        background: white;\n        box-sizing: border-box;\n      }\n      #payment-request-button {\n        margin-bottom: 32px;\n      }\n      /* Buttons and links */\n      button {\n        background: #5469d4;\n        font-family: Arial, sans-serif;\n        color: #ffffff;\n        border-radius: 0 0 4px 4px;\n        border: 0;\n        padding: 12px 16px;\n        font-size: 16px;\n        font-weight: 600;\n        cursor: pointer;\n        display: block;\n        transition: all 0.2s ease;\n        width: 100%;\n      }\n      button:hover {\n        filter: contrast(115%);\n      }\n      button:disabled {\n        opacity: 0.5;\n        cursor: default;\n      }\n      /* spinner/processing state, errors */\n      .spinner,\n      .spinner:before,\n      .spinner:after {\n        border-radius: 50%;\n      }\n      .spinner {\n        color: #ffffff;\n        font-size: 22px;\n        text-indent: -99999px;\n        margin: 0px auto;\n        position: relative;\n        width: 20px;\n        height: 20px;\n        box-shadow: inset 0 0 0 2px;\n        -webkit-transform: translateZ(0);\n        -ms-transform: translateZ(0);\n        transform: translateZ(0);\n      }\n      .spinner:before,\n      .spinner:after {\n        position: absolute;\n        content: \"\";\n      }\n      .spinner:before {\n        width: 10.4px;\n        height: 20.4px;\n        background: #5469d4;\n        border-radius: 20.4px 0 0 20.4px;\n        top: -0.2px;\n        left: -0.2px;\n        -webkit-transform-origin: 10.4px 10.2px;\n        transform-origin: 10.4px 10.2px;\n        -webkit-animation: loading 2s infinite ease 1.5s;\n        animation: loading 2s infinite ease 1.5s;\n      }\n      .spinner:after {\n        width: 10.4px;\n        height: 10.2px;\n        background: #5469d4;\n        border-radius: 0 10.2px 10.2px 0;\n        top: -0.1px;\n        left: 10.2px;\n        -webkit-transform-origin: 0px 10.2px;\n        transform-origin: 0px 10.2px;\n        -webkit-animation: loading 2s infinite ease;\n        animation: loading 2s infinite ease;\n      }\n      @keyframes loading {\n        0% {\n          -webkit-transform: rotate(0deg);\n          transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(360deg);\n          transform: rotate(360deg);\n        }\n      }\n      @media only screen and (max-width: 600px) {\n        form {\n          width: 80vw;\n        }\n      }\n      `}</style>\n    </>\n  );\n}\n","/Users/liamarbuckle/Documents/Mint/theclub/client/src/lib/UserContext.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/login.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/header.js",["84"],"import { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../lib/UserContext\";\nimport { LifetimeContext } from \"../lib/LifetimeContext\";\nimport { LifetimeAccessRequestStatusContext } from \"../lib/LifetimeAccessRequestStatusContext\";\nimport { CallToAction, TextButton } from \"@magiclabs/ui\";\nimport { magic } from \"../lib/magic\";\n\nconst Header = () => {\n  const history = useHistory();\n  const [user, setUser] = useContext(UserContext);\n  const [, setLifetimeAccess] = useContext(LifetimeContext);\n  const [\n    lifetimeAccessRequestStatus,\n    setLifetimeAccessRequestStatus,\n  ] = useContext(LifetimeAccessRequestStatusContext);\n\n  const logout = () => {\n    magic.user.logout().then(() => {\n      setUser({ user: null });\n      setLifetimeAccess(false);\n      setLifetimeAccessRequestStatus(\"\");\n      history.push(\"/login\");\n    });\n  };\n\n  return (\n    <header>\n      <nav>\n        <ul>\n          <li>\n            <TextButton\n              color=\"primary\"\n              size=\"sm\"\n              onPress={() => history.push(\"/\")}\n            >\n              Free Content\n            </TextButton>\n          </li>\n          <li>\n            <TextButton\n              color=\"primary\"\n              size=\"sm\"\n              onPress={() => history.push(\"/premium-content\")}\n            >\n              Premium Content\n            </TextButton>\n          </li>\n          {user?.loading ? (\n            // If loading, don't display any buttons specific to the loggedIn state\n            <div style={{ height: \"38px\" }}></div>\n          ) : user?.issuer ? (\n            <>\n              <li>\n                <TextButton\n                  color=\"primary\"\n                  size=\"sm\"\n                  onPress={() => history.push(\"/profile\")}\n                >\n                  Profile\n                </TextButton>\n              </li>\n              <li>\n                <TextButton color=\"warning\" size=\"sm\" onPress={logout}>\n                  Logout\n                </TextButton>\n              </li>\n            </>\n          ) : (\n            <li>\n              <CallToAction\n                color=\"primary\"\n                size=\"sm\"\n                onPress={() => history.push(\"/profile\")}\n              >\n                Log In\n              </CallToAction>\n            </li>\n          )}\n        </ul>\n      </nav>\n      <style>{`\n        nav {\n          max-width: 45rem;\n          margin: 0 auto 50px;\n          padding: 1.25rem 1.25rem;\n          border-bottom: 1px solid #f0f0f0;\n          box-sizing: border-box;\n        }\n        ul {\n          display: flex;\n          list-style: none;\n        }\n        li {\n          margin-right: 1.5rem;\n          line-height: 38px;\n        }\n        li:first-child {\n          margin-left: auto;\n        }\n      `}</style>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/loading.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/login-form.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/components/signup-form.js",[],"/Users/liamarbuckle/Documents/Mint/theclub/client/src/app.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":37,"column":6,"nodeType":"91","endLine":37,"endColumn":13,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":14,"column":5,"nodeType":"95","messageId":"96","endLine":14,"endColumn":32},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLifetimeAccess'. Either include it or remove the dependency array.","ArrayExpression",["99"],"no-unused-vars","'lifetimeAccessRequestStatus' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [email, setLifetimeAccess]",{"range":"102","text":"103"},[1263,1270],"[email, setLifetimeAccess]"]